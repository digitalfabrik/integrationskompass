version: 2.1

jobs:
  pip-install:
    docker:
      - image: cimg/python:3.9.16
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: pip-{{ checksum "pyproject.toml" }}-v1
      - run:
          name: Install pip dependencies
          command: |
            if [[ -d ".venv" ]]; then
              echo "Virtual environment restored from cache, skipping pip install"
            else
              python3 -m venv .venv
              source .venv/bin/activate
              pip install -e .[dev-pinned,pinned]
            fi
      - save_cache:
          key: pip-{{ checksum "pyproject.toml" }}-v1
          paths:
            - .venv
            - integreat_compass.egg-info
            - /home/circleci/.cache/pip
      - persist_to_workspace:
          root: .
          paths:
            - .venv
            - integreat_compass.egg-info
  npm-install:
    docker:
      - image: "cimg/node:lts"
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-{{ checksum "package-lock.json" }}-v1
      - run:
          name: Install npm dependencies
          command: |
            if [[ -d "node_modules" ]]; then
              echo "Node modules restored from cache, skipping npm install"
            else
              npm ci
            fi
      - save_cache:
          key: npm-{{ checksum "package-lock.json" }}-v1
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  prettier:
    docker:
      - image: "cimg/node:lts"
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Check formatting of CSS & JS files
          command: npx prettier --check .

workflows:
  develop:
    jobs:
      - pip-install:
          filters:
            branches:
              ignore: main
      - npm-install:
          filters:
            branches:
              ignore: main
      - prettier:
          requires:
            - npm-install
  main:
    jobs:
      - pip-install:
          name: pip-install-main
          filters:
            branches:
              only: main
  deploy:
    jobs:
      - pip-install:
          name: pip-install-deploy
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
